{"version":3,"sources":["reportWebVitals.js","history.js","components/MovieListHeading.js","components/MovieList.js","components/SearchBox.js","features/apiCall.js","features/shoppingCart.js","components/BuyButton.jsx","components/MovieInCart.jsx","components/RemoveFromCart.js","components/ShoppingCart.jsx","components/NewReleaseList.jsx","App.js","components/MovieDetails.jsx","Routes.js","features/rootReducer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","history","MovieListHeading","props","className","heading","MovieList","useState","genres","setGenres","useHistory","findGenre","a","fetch","response","json","console","log","useEffect","movies","map","movie","index","poster_path","src","alt","onClick","push","pathname","state","detail","title","genre_ids","genreId","genre","find","id","name","size","handleBuyClick","SearchBox","value","onChange","event","setSearchValue","target","placeholder","getDataFromSearch","createAction","getDataFromId","getDataFromTrening","actions","api_key","reducer","createReducer","url","action","payload","addToCart","removeFromCart","product","filter","BuyButton","handleOnClick","text","MovieInCart","poster","RemoveFromCart","xmlns","width","height","fillRule","viewBox","d","ShoppingCart","shoppingCart","useSelector","dispatch","useDispatch","shoppingList","cartAction","NewReleaseList","movieList","setMovieList","data","results","App","setMovies","searchValue","apiAction","apiCall","getMovieRequest","MovieDetails","location","useLocation","movieID","setMovieID","movieName","setMovieName","moviePoster","setMoviePoster","movieRating","setMovieRating","movieGenre","setMovieGenre","moviePlot","setMoviePlot","movieDirector","setMovieDirector","movieActors","setMovieActors","movieLanguage","setMovieLanguage","movieCountry","setMovieCountry","getSelectedMovie","vote_average","overview","Director","Actors","spoken_languages","production_countries","language","english_name","country","Routes","path","exact","component","Component","rootReducer","combineReducers","apiReducer","cartReducer","store","configureStore","ReactDOM","render","basename","process","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a018c83.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","import React from 'react';\r\nimport './movieListHeading.css';\r\n\r\n\r\nconst MovieListHeading = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1 className=\"list-heading\">{props.heading}</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MovieListHeading;","import React, { useState, useEffect } from 'react';\r\nimport './listItem.css';\r\nimport '../App.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { MdShoppingCart } from 'react-icons/md';\r\nimport MovieListHeading from './MovieListHeading';\r\n\r\n\r\n\r\nconst MovieList = (props) => {\r\n\r\n\tconst [genres, setGenres] = useState([]);\r\n\t\r\n\tlet history = useHistory();\r\n\r\n\tlet url = 'https://api.themoviedb.org/3/genre/movie/list?api_key=7ab73473a05278044ef701c06449633a'\r\n\r\n\tconst findGenre = async () => {\r\n\t\ttry {\r\n\t\t\tlet response = await fetch(url);\r\n\t\t\tlet json = await response.json();\t\r\n\t\t\tif (json.genres) {\r\n\t\t\t\tsetGenres(json.genres);\r\n\t\t\t}\r\n\t\t} catch {\r\n\t\t\tconsole.log('Failed to get data');\r\n\t\t}\r\n\t\t\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfindGenre();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<MovieListHeading heading='Search results' />\r\n\t\t<div className=\"row\">\r\n\t\t\t{props.movies.map((movie, index) => (\r\n\t\t\t\t<div key={index} className=\"list-item\">\r\n\t\t\t\t\t{movie.poster_path ? \r\n\t\t\t\t\t\t\t<img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} className=\"list-item-image\" alt='movie' onClick={() => history.push({\r\n\t\t\t\t\t\t\t\tpathname: '/MovieDetails',\r\n\t\t\t\t\t\t\t\tstate: { detail: movie }\r\n\t\t\t\t\t\t\t})}></img>\r\n\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t<div className=\"gray-box\" onClick={() => history.push({\r\n\t\t\t\t\t\t\t\tpathname: '/MovieDetails',\r\n\t\t\t\t\t\t\t\tstate: { detail: movie }\r\n\t\t\t\t\t\t\t})}></div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t<h3 className=\"title\">{movie.title}</h3>\r\n\t\t\t\t\t\t\t<div className=\"genre-container\">\r\n\t\t\t\t\t\t\t{movie.genre_ids.map((genreId, index) => {\r\n  \t\t\t\t\t\t\t\tlet genre = genres.find(genre => genre.id === genreId);  \r\n\t\t\t\t\t\t\t\tif (!genre) return null;\r\n \t\t\t\t\t\t\t\treturn (\r\n                                    <div className=\"genre\" key={index}>\r\n                                        {genre.name}\r\n                                    </div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className=\"price-wrapper\">\r\n\t\t\t\t\t\t\t<p className=\"price\">8$</p>\r\n\t\t\t\t\t\t\t<MdShoppingCart className=\"shopping-cart-button\" size=\"2em\" onClick={() => props.handleBuyClick(movie)} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MovieList;","import React from 'react';\r\n\r\nconst SearchBox = (props) => {\r\n\treturn (\r\n\t\t<div className='col col-sm-4'>\r\n\t\t\t<input\r\n\t\t\t\tclassName='form-control'\r\n\t\t\t\tvalue={props.value}\r\n\t\t\t\tonChange={(event) => props.setSearchValue(event.target.value)}\r\n\t\t\t\tplaceholder='Search here...'\r\n\t\t\t></input>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchBox;","import { createAction, createReducer } from '@reduxjs/toolkit';\r\n\r\nconst getDataFromSearch = createAction('get data from search');\r\nconst getDataFromId = createAction('get data from id');\r\nconst getDataFromTrening = createAction('get data from trending')\r\n\r\nconst actions = { getDataFromSearch, getDataFromId, getDataFromTrening };\r\nconst api_key = '7ab73473a05278044ef701c06449633a'\r\n\r\nconst initialState = {\r\n    url: null\r\n}\r\n\r\nconst reducer = createReducer(initialState, {\r\n    [getDataFromSearch] : (state, action) => {\r\n        return {\r\n            ...state,\r\n            url:  `https://api.themoviedb.org/3/search/movie?api_key=${api_key}&query=${action.payload}`\r\n        }\r\n    },\r\n\r\n    [getDataFromId] : (state, action) => {\r\n        return {\r\n            ...state,\r\n            url: `https://api.themoviedb.org/3/movie/${action.payload}?api_key=${api_key}`\r\n        }\r\n    },\r\n\r\n    [getDataFromTrening] : (state, action) => {\r\n        return {\r\n            ...state,\r\n            url: `https://api.themoviedb.org/3/trending/movie/week?api_key=${api_key}`\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport { actions, reducer };","import { createAction, createReducer } from '@reduxjs/toolkit';\r\n\r\nconst addToCart = createAction('Add movie to cart');\r\nconst removeFromCart = createAction('Remove movie from cart');\r\n\r\nconst actions = { addToCart, removeFromCart };\r\n\r\nconst initialState = {\r\n    product: []\r\n}\r\n\r\nconst reducer = createReducer(initialState, {\r\n    [addToCart] : (state, action) => {\r\n        return {\r\n            ...state,\r\n            product: [...state.product, action.payload]\r\n        };\r\n    },\r\n    [removeFromCart] : (state, action) => {\r\n        const id = action.payload.id\r\n      return {\r\n          ...state,\r\n          product: state.product.filter((product) => product.id !== id)\r\n        };\r\n        \r\n    }\r\n})\r\n\r\nexport { actions, reducer };","import './BuyButton.css';\r\n\r\nconst BuyButton = (props) => {\r\n    return (\r\n        <button className=\"buyButton\" onClick={props.handleOnClick}>{props.text}</button>\r\n    )\r\n}\r\n\r\nexport default BuyButton;","import './MovieInCart.css';\r\n\r\nconst MovieInCart = (props) => {\r\n    return (\r\n        <div className=\"cartItemContainer\">\r\n            <img src={`https://image.tmdb.org/t/p/w500/${props.poster}`} className=\"cartItemPoster\" alt=\"\" />\r\n            <p className=\"cartItemTitle\">{props.title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInCart;","import React from 'react';\r\n\r\nconst RemoveFromCart = () => {\r\n\treturn (\r\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fillRule=\"currentColor\" className=\"bi bi-dash-circle\" viewBox=\"0 0 16 16\">\r\n\t\t\t\t<path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n\t\t\t\t<path d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\"/>\r\n\t\t\t</svg>\r\n\t);\r\n};\r\n\r\nexport default RemoveFromCart;","import './ShoppingCart.css';\r\nimport BuyButton from './BuyButton';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { actions as cartAction } from '../features/shoppingCart';\r\nimport MovieInCart from './MovieInCart';\r\nimport RemoveFromCart from './RemoveFromCart';\r\nimport MovieListHeading from './MovieListHeading';\r\n\r\n\r\nconst ShoppingCart = () => {\r\n\r\n    let shoppingCart = useSelector(state => state.shoppingCart.product);\r\n\r\n    const [itemInShoppingList, setItemInShoppingList] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\tconst removeFromCart = (movie) => dispatch(cartAction.removeFromCart(movie))\r\n    \r\n\r\n    if (shoppingCart !== []) {\r\n    const shoppingList = shoppingCart.map((movie, index) => (\r\n            <div key={index} className=\"movieContainer\">\r\n                <MovieInCart\r\n                    title={movie ? movie.title : ''}\r\n                    poster={movie ? movie.poster_path : ''}\r\n                />\r\n                <div onClick={() => removeFromCart(movie)} className=\"removeCart\">\r\n                    <RemoveFromCart />\r\n                </div>\r\n            </div>\r\n        ))\r\n        return (\r\n            <div>\r\n                <MovieListHeading heading='Shopping Cart' />\r\n                {shoppingList}\r\n                {shoppingList != ''\r\n                ?   <div className=\"buyButtonShoppingCart\">\r\n                        <BuyButton text={\"Buy\"} />\r\n                    </div>\r\n                : \"\"\r\n                }\r\n                \r\n            </div> \r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <p>Empty</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShoppingCart;","\r\nimport './listItem.css'\r\nimport './newReleasesList.css'\r\nimport { MdShoppingCart } from \"react-icons/md\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport MovieListHeading from './MovieListHeading'\r\n\r\nconst NewReleaseList = (props) => {\r\n\r\n    const [movieList, setMovieList] = useState([]);\r\n    const [genres, setGenres] = useState([]);\r\n\r\n    let history = useHistory();\r\n\r\n    let url = 'https://api.themoviedb.org/3/genre/movie/list?api_key=7ab73473a05278044ef701c06449633a'\r\n\r\n    const findGenre = async () => {\r\n        try {\r\n            let response = await fetch(url);\r\n            let json = await response.json();\r\n            if (json.genres) {\r\n                setGenres(json.genres);\r\n            }\r\n        } catch {\r\n            console.log('Failed to get data');\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch('https://api.themoviedb.org/3/trending/movie/week?api_key=7ab73473a05278044ef701c06449633a')\r\n            .then((response) => response.json())\r\n            .then((data) => setMovieList(...movieList, data.results));\r\n\r\n        findGenre();\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <MovieListHeading heading='New Movies' />\r\n            <div className=\"row\">\r\n                {movieList.map((movie, index) => (\r\n                    <div key={index} className=\"list-item\">\r\n                        {movie.poster_path ?\r\n                            <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} className=\"list-item-image\" alt='movie' onClick={() => history.push({\r\n                                pathname: '/MovieDetails',\r\n                                state: { detail: movie }\r\n                            })}></img>\r\n                            :\r\n                            <div className=\"gray-box\" onClick={() => history.push({\r\n                                pathname: '/MovieDetails',\r\n                                state: { detail: movie }\r\n                            })}></div>\r\n                        }\r\n                        <h3 className=\"title\">{movie.title}</h3>\r\n                        <div className=\"genre-container\">\r\n                            {movie.genre_ids.map((genreId, index) => {\r\n                                let genre = genres.find(genre => genre.id === genreId);\r\n                                if (!genre) return null;\r\n                                return (\r\n                                    <div className=\"genre\" key={index}>\r\n                                        {genre.name}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"price-wrapper\">\r\n                            <p className=\"price\">8$</p>\r\n                            <MdShoppingCart className=\"shopping-cart-button\" size=\"2em\" onClick={() => props.handleBuyClick(movie)} />\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewReleaseList;","import React, { useState, useEffect } from 'react';\r\n\r\nimport './App.css';\r\nimport MovieList from './components/MovieList';\r\nimport MovieListHeading from './components/MovieListHeading';\r\nimport SearchBox from './components/SearchBox';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { actions as apiAction } from './features/apiCall';\r\nimport { actions as cartAction } from './features/shoppingCart';\r\nimport ShoppingCart from './components/ShoppingCart';\r\nimport NewReleaseList from './components/NewReleaseList';\r\nimport Checkout from './components/Checkout';\r\n\r\nconst App = () => {\r\n\tconst [movies, setMovies] = useState([]);\r\n\tconst [searchValue, setSearchValue] = useState('');\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst addToCart = (movie) => dispatch(cartAction.addToCart(movie))\r\n\t\r\n\tif (searchValue !== '') {\r\n\t\tdispatch(apiAction.getDataFromSearch(searchValue));\r\n\t}\r\n\tlet url = useSelector(state => state.apiCall.url);\r\n\r\n\tconst getMovieRequest = async () => {\r\n\t\ttry {\r\n\t\t\tlet response = await fetch(url);\r\n\t\t\tlet json = await response.json();\t\r\n\t\t\tif (json.results) {\r\n\t\t\t\tsetMovies(json.results);\r\n\t\t\t}\r\n\t\t} catch {\r\n\t\t\tconsole.log('Failed to get data');\r\n\t\t}\r\n\t\t\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetMovieRequest(searchValue);\r\n\t}, [searchValue]);\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div>\r\n\t\t\t\t<MovieListHeading heading='Movies' />\r\n\t\t\t\t<SearchBox searchValue={searchValue} setSearchValue={setSearchValue} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t{searchValue === '' ? \r\n\t\t\t\t<NewReleaseList handleBuyClick={addToCart}/>\t\r\n\t\t\t\t:\t\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t<MovieList\r\n\t\t\t\tmovies={movies}\r\n\t\t\t\thandleBuyClick={addToCart}\r\n\t\t\t\t// cartItem={AddToCart}\r\n\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<ShoppingCart />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import './MovieDetails.css';\r\nimport BuyButton from './BuyButton';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { actions as apiAction } from '../features/apiCall';\r\nimport { actions as cartAction } from '../features/shoppingCart';\r\n\r\nconst MovieDetails = (props) => {\r\n\r\n    const location = useLocation();\r\n\r\n    const [movieID, setMovieID] = useState();\r\n    const [movieName, setMovieName] = useState();\r\n    const [moviePoster, setMoviePoster] = useState();\r\n    const [movieRating, setMovieRating] = useState();\r\n    const [movieGenre, setMovieGenre] = useState([]);\r\n    const [moviePlot, setMoviePlot] = useState();\r\n    const [movieDirector, setMovieDirector] = useState();\r\n    const [movieActors, setMovieActors] = useState();\r\n    const [movieLanguage, setMovieLanguage] = useState([]);\r\n    const [movieCountry, setMovieCountry] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setMovieID(location.state.detail.id);\r\n     }, [location]);\r\n\r\n     const dispatch = useDispatch();\r\n     \r\n    let url = useSelector(state => state.apiCall.url);\r\n    if (movieID != null) {\r\n        dispatch(apiAction.getDataFromId(movieID));\r\n    }\r\n    const addToCart = (movie) => dispatch(cartAction.addToCart(movie))\r\n\r\n     useEffect(() => {\r\n        getSelectedMovie();\r\n    }, [movieID]);\r\n    \r\n\r\n    const getSelectedMovie = async () => {\r\n\r\n        if (movieID) {\r\n            try {\r\n                let response = await fetch(url);\r\n                let data = await response.json();\t\r\n                console.log('data: ', data)\t\r\n                if (data != null) {\r\n                    setMovieName(data.title);\r\n                    setMoviePoster(data.poster_path);\r\n                    setMovieRating(data.vote_average);\r\n                    setMovieGenre(\r\n                        ...movieGenre,\r\n                        data.genres\r\n                        );\r\n                    setMoviePlot(data.overview);\r\n                    setMovieDirector(data.Director);\r\n                    setMovieActors(data.Actors);\r\n                    setMovieLanguage(\r\n                        ...movieLanguage,\r\n                        data.spoken_languages\r\n                        );\r\n                    setMovieCountry(\r\n                        ...movieCountry,\r\n                        data.production_countries\r\n                        );;\r\n                }\t\r\n            } catch {\r\n                console.log('Failed to get data');\r\n            }\r\n        }\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n    const handleCloseWindow = () => {\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <div className=\"movieDetailsContainer\">\r\n            <div className=\"closeWindow\" onClick={() => handleCloseWindow()}>✕</div>\r\n            {movieName \r\n            ? (\r\n            <>\r\n                <section className=\"imgBox\">\r\n                    <img src={`https://image.tmdb.org/t/p/w500/${moviePoster}`} className=\"moviePoster\" alt=\"\" />\r\n                </section>\r\n                <section className=\"infoBox\">\r\n                    <section className=\"topInfo\">\r\n                        <h3>{movieName}</h3>\r\n                        <section className=\"ratingGenre\">\r\n                            <div className=\"movieRating\">{movieRating}</div> | \r\n                                {movieGenre.map((genre, index) => (\r\n                                    <div className=\"movieGenre\" key={index}>\r\n                                        {genre.name}\r\n                                    </div>\r\n                                ))}\r\n                            \r\n                        </section>\r\n                        <div className=\"moviePlot\">\r\n                            {moviePlot}\r\n                        </div>\r\n                        <div className=\"directorName\">Director <b>{movieDirector}</b></div>\r\n                        <div className=\"actorsList\">Actors <b>{movieActors}</b></div>\r\n                    </section>\r\n                    <section className=\"bottomInfo\">\r\n                        <section className=\"languageCountry\">\r\n                            <div className=\"movieLanguage\">Language \r\n                            {movieLanguage.map((language, index) => \r\n                                <b key={index}> {language.english_name}</b>\r\n                            )\r\n                            }</div>\r\n                            <div className=\"movieCountry\">Country \r\n                            {movieCountry.map((country, index) => \r\n                                <b key={index}> {country.name}</b>\r\n                            )\r\n                            }</div>\r\n                        </section>\r\n                        <BuyButton text={\"Buy 10$\"} handleOnClick={() => addToCart(location.state.detail)} />\r\n                    </section>\r\n                </section>\r\n            </>\r\n            )\r\n            : <h3>Loading...</h3>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetails;","import React, { Component } from 'react';\r\nimport { Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport history from './history';\r\nimport App from './App';\r\nimport MovieDetails from './components/MovieDetails';\r\n\r\nexport default class Routes extends Component {\r\n    render() {\r\n        return (\r\n            <Router history={history}>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={App} />\r\n                    <Route path=\"/MovieDetails\" component={MovieDetails} />\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { reducer as apiReducer } from './apiCall';\r\nimport { reducer as cartReducer } from './shoppingCart';\r\n\r\nconst rootReducer = combineReducers({\r\n    apiCall: apiReducer,\r\n    shoppingCart : cartReducer\r\n})\r\n\r\nexport { rootReducer };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport Routes from './Routes';\r\n\r\nimport {configureStore} from '@reduxjs/toolkit';\r\nimport {Provider} from 'react-redux';\r\nimport { rootReducer } from './features/rootReducer';\r\n\r\nconst store = configureStore({\r\n  reducer : rootReducer\r\n})\r\n\r\nReactDOM.render(\r\n  <Router basename={`/${process.env.PUBLIC_URL}`}>\r\n    <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Routes />\r\n    </Provider>\r\n    </React.StrictMode>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// comment from Anastasia\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}