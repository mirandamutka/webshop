{"version":3,"sources":["reportWebVitals.js","features/movieDetails.js","components/MovieListHeading.js","components/Pagination.jsx","components/MovieList.js","components/SearchBox.js","features/shoppingCart.js","components/BuyButton.jsx","components/RemoveFromCart.js","components/MovieInCart.jsx","components/ShoppingCart.jsx","components/NewReleaseList.jsx","components/Filters.jsx","components/Checkout.jsx","App.js","features/apiCall.js","components/MovieDetails.jsx","components/BoughtMovie.jsx","components/Receipt.jsx","Routes.js","features/rootReducer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getMovieDetails","createAction","actions","reducer","createReducer","movie","state","action","payload","MovieListHeading","props","className","heading","Pagination","onClick","page","setPage","console","log","MovieList","useState","genres","setGenres","dispatch","useDispatch","history","useHistory","findGenre","a","fetch","response","json","toggleBuyButton","shoppingCart","find","cartItem","title","length","size","handleBuyClick","goToMovieDetails","push","pathname","movieAction","useEffect","movies","map","index","poster_path","src","alt","genre_ids","genreId","genre","id","name","SearchBox","type","value","onChange","event","setSearchValue","target","placeholder","addToCart","removeFromCart","addToTotalSum","removeFromTotalSum","product","total","filter","BuyButton","handleOnClick","text","RemoveFromCart","xmlns","width","height","fillRule","viewBox","d","MovieInCart","price","poster","remove","toString","substring","parseInt","cartAction","ShoppingCart","useSelector","totalSum","toggle","shoppingList","NewReleaseList","movieList","setMovieList","data","results","slice","Filters","apiKey","url","genreUrl","moviesUrl","movieByGenre","setMovieByGenre","displayGenreList","setDisplayGenreList","headLine","setHeadLine","fetchGenre","axios","get","params","api_key","language","modifiedData","g","fetchMovieByGenre","genre_id","with_genres","posterUrl","m","backPoster","popularity","overview","rating","fetchAPI","handleGenreClick","setGenreActive","genreList","genreActive","Checkout","payment","setPayment","setName","handlePayment","selected","onSubmit","preventDefault","required","App","setMovies","searchValue","toggleShoppingCart","setToggleShoppingCart","setUrl","getMovieRequest","query","getDataFromSearch","getDataFromId","getDataFromTrening","MovieDetails","useLocation","movieID","setMovieID","movieName","setMovieName","moviePoster","setMoviePoster","movieRating","setMovieRating","movieGenre","setMovieGenre","moviePlot","setMoviePlot","movieLanguage","setMovieLanguage","movieCountry","setMovieCountry","moviePrice","setMoviePrice","apiCall","movieDetails","apiAction","getSelectedMovie","vote_average","spoken_languages","production_countries","handleBuyButton","english_name","country","BoughtMovie","Receipt","Routes","exact","path","component","Component","rootReducer","combineReducers","apiReducer","cartReducer","movieReducer","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.370788e1.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createAction, createReducer } from '@reduxjs/toolkit';\r\n\r\nconst getMovieDetails = createAction('get movie details');\r\n\r\nconst actions = { getMovieDetails };\r\n\r\nconst initialState = {\r\n    movie: null\r\n}\r\n\r\nconst reducer = createReducer(initialState, {\r\n    [getMovieDetails] : (state, action) => {\r\n        return {\r\n            ...state,\r\n            movie: action.payload\r\n        };\r\n    }\r\n})\r\n\r\nexport { actions, reducer };","import React from 'react';\r\nimport './movieListHeading.css';\r\n\r\n\r\nconst MovieListHeading = (props) => {\r\n\treturn (\r\n\t\t<div className=\"list\">\r\n\t\t\t<h1 className=\"list-heading\">{props.heading}</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MovieListHeading;","import './pagination.css';\r\n\r\nconst Pagination = (props) => {\r\n    \r\n    const pagePrevious = () => {\r\n        if(props.page > 1) {\r\n            props.setPage(props.page - 1)\r\n        } else {\r\n            console.log('Page previous')\r\n        }\r\n    }\r\n\r\n    const pageNext = () => {\r\n            props.setPage(props.page + 1)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"pagination-container\">\r\n            <button className=\"page-button\" onClick={() => pagePrevious()}>◄ Previous</button>\r\n            <button className=\"page-button\" onClick={() => pageNext()}>Next ►</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React, { useState, useEffect } from 'react';\r\nimport './listItem.css';\r\nimport '../App.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { actions as movieAction } from '../features/movieDetails';\r\n\r\nimport { MdShoppingCart, MdCheckCircle } from 'react-icons/md';\r\nimport MovieListHeading from './MovieListHeading';\r\nimport Pagination from './Pagination';\r\n\r\n\r\n\r\nconst MovieList = (props) => {\r\n\r\n\tconst [genres, setGenres] = useState([]);\r\n\r\n\tconst dispatch = useDispatch();\r\n\t\r\n\tlet history = useHistory();\r\n\r\n\tlet url = 'https://api.themoviedb.org/3/genre/movie/list?api_key=7ab73473a05278044ef701c06449633a'\r\n\r\n\tconst findGenre = async () => {\r\n\t\ttry {\r\n\t\t\tlet response = await fetch(url);\r\n\t\t\tlet json = await response.json();\t\r\n\t\t\tif (json.genres) {\r\n\t\t\t\tsetGenres(...genres, json.genres);\r\n\t\t\t}\r\n\t\t} catch {\r\n\t\t\tconsole.log('Failed to get data');\r\n\t\t}\r\n\t\t\r\n\t};\r\n\r\n\tconst toggleBuyButton = (movie) => {\r\n        let found = props.shoppingCart.find(cartItem => cartItem.title === movie.title);\r\n\t\tif (!found) {\r\n            return (\r\n                <div className=\"price-wrapper\">\r\n                    <p className=\"price\">{movie.title.length}$</p> <MdShoppingCart className=\"shopping-cart-button small-display\" size=\"2em\" onClick={() => props.handleBuyClick(movie, movie.title.length)} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"price-wrapper\">\r\n                    <p className=\"price\">{movie.title.length}$</p> <MdCheckCircle className=\"shopping-cart-button small-display\" size=\"2em\" />\r\n                </div>\r\n            )\r\n        }\r\n\t}\r\n\r\n\tconst goToMovieDetails = (movie) => {\r\n\t\thistory.push({pathname: '/MovieDetails'});\r\n\t\tdispatch(movieAction.getMovieDetails(movie));\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfindGenre();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<MovieListHeading heading='Search results' />\r\n\t\t<div className=\"row\">\r\n\t\t\t{props.movies.map((movie, index) => (\r\n\t\t\t\t<div key={index} className=\"list-item\">\r\n\t\t\t\t\t{movie.poster_path ? \r\n\t\t\t\t\t\t\t<img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} className=\"list-item-image\" alt='movie' onClick={() => goToMovieDetails(movie)}></img>\r\n\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t<div className=\"gray-box\" onClick={() => goToMovieDetails(movie)}></div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t<h3 className=\"title\">{movie.title}</h3>\r\n\t\t\t\t\t\t\t<div className=\"genre-container\">\r\n\t\t\t\t\t\t\t{movie.genre_ids.map((genreId, index) => {\r\n  \t\t\t\t\t\t\t\tlet genre = genres.find(genre => genre.id === genreId);  \r\n\t\t\t\t\t\t\t\tif (!genre) return null;\r\n \t\t\t\t\t\t\t\treturn (\r\n                                    <div className=\"genre\" key={index}>\r\n                                        {genre.name}\r\n                                    </div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{toggleBuyButton(movie)}\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t\t<Pagination\r\n\t\t\t\tpage={props.page}\r\n\t\t\t\tsetPage={props.setPage}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MovieList;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './searchBox.css';\r\n\r\nconst SearchBox = (props) => {\r\n\treturn (\r\n\t\t<div className=\"SearchBox\">\r\n\t\t\t<input type=\"search\"\r\n\t\t\t\tvalue={props.value}\r\n\t\t\t\tonChange={(event) => props.setSearchValue(event.target.value)}\r\n\t\t\t\tplaceholder='Search here...'\r\n\t\t\t></input>\r\n\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchBox;","import { createAction, createReducer } from '@reduxjs/toolkit';\r\n\r\nconst addToCart = createAction('Add movie to cart');\r\nconst removeFromCart = createAction('Remove movie from cart');\r\nconst addToTotalSum = createAction('Add price of movie to total sum');\r\nconst removeFromTotalSum = createAction('Remove price of movie from total sum');\r\n\r\nconst actions = { addToCart, removeFromCart, addToTotalSum, removeFromTotalSum };\r\n\r\nconst initialState = {\r\n    product: [],\r\n    total: 0\r\n}\r\n\r\nconst reducer = createReducer(initialState, {\r\n    [addToCart] : (state, action) => {\r\n\r\n        return {\r\n            ...state,\r\n            product: [...state.product, action.payload]\r\n        };\r\n    },\r\n    [removeFromCart] : (state, action) => {\r\n        \r\n        const id = action.payload.id\r\n\r\n        return {\r\n            ...state,\r\n            product: state.product.filter((product) => product.id !== id)\r\n        };\r\n    },\r\n    [addToTotalSum] : (state, action) => {\r\n\r\n        return {\r\n            ...state,\r\n            total: state.total + action.payload\r\n        }\r\n    },\r\n    [removeFromTotalSum] : (state, action) => {\r\n\r\n        return {\r\n            ...state,\r\n            total: state.total - action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport { actions, reducer };","import './BuyButton.css';\r\n\r\nconst BuyButton = (props) => {\r\n    return (\r\n        <button className=\"buyButton\" onClick={props.handleOnClick}>{props.text}</button>\r\n    )\r\n}\r\n\r\nexport default BuyButton;","import React from 'react';\r\n\r\nconst RemoveFromCart = () => {\r\n\treturn (\r\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fillRule=\"currentColor\" className=\"bi bi-dash-circle\" viewBox=\"0 0 16 16\">\r\n\t\t\t\t<path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n\t\t\t\t<path d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\"/>\r\n\t\t\t</svg>\r\n\t);\r\n};\r\n\r\nexport default RemoveFromCart;","import './MovieInCart.css';\r\nimport '../App.css';\r\nimport RemoveFromCart from './RemoveFromCart';\r\nimport { actions as cartAction } from '../features/shoppingCart';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst MovieInCart = (props) => {\r\n\r\n    let price = props.price;\r\n \r\n    const dispatch = useDispatch();\r\n\r\n    const removeFromCart = (movie) => {\r\n        if(props.price >= 100) {\r\n            price = props.price.toString().substring(0, 2);\r\n            parseInt(price);\r\n        }\r\n        dispatch(cartAction.removeFromCart(movie));\r\n        dispatch(cartAction.removeFromTotalSum(price));\r\n    }\r\n\r\n    return (\r\n        <div className=\"cartItemContainer\">\r\n            <img src={`https://image.tmdb.org/t/p/w500/${props.poster}`} className=\"cartItemPoster\" alt=\"\" />\r\n            <p className=\"cartItemTitle\">{props.title}</p>\r\n            <div className=\"rightRow\">\r\n                <p className=\"cartItemPrice\">{price}$</p>\r\n                <div onClick={() => removeFromCart(props.remove)}>\r\n                    <RemoveFromCart />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInCart;","import './ShoppingCart.css';\r\nimport './listItem.css';\r\nimport BuyButton from './BuyButton';\r\nimport { useSelector } from 'react-redux';\r\nimport MovieInCart from './MovieInCart';\r\nimport { MdShoppingCart } from 'react-icons/md';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nconst ShoppingCart = (props) => {\r\n\r\n    let shoppingCart = useSelector(state => state.shoppingCart.product);\r\n    let totalSum = useSelector(state => state.shoppingCart.total);\r\n    let history = useHistory();\r\n\r\n    console.log('total sum: ', totalSum);\r\n\r\n    const goToCheckout = () => {\r\n        history.push('/Checkout')\r\n    }\r\n    \r\n    if(props.toggle) {\r\n        if (shoppingCart !== []) {\r\n        const shoppingList = shoppingCart.map((movie, index) => {\r\n            return (\r\n                <div key={index} className=\"movieContainer\">\r\n                    <MovieInCart\r\n                        title={movie ? movie.title : ''}\r\n                        poster={movie ? movie.poster_path : ''}\r\n                        price={movie.title.length}\r\n                        remove={movie}\r\n                    />\r\n                </div>\r\n            )\r\n        })\r\n            return (\r\n                \r\n                <div className={shoppingCart.length != 0 ? `shoppingCartContainer  expanded` : `shoppingCartContainer`}>\r\n                    <MdShoppingCart className=\"flexEnd\" size=\"3em\" />\r\n                    <div className={shoppingCart.length != 0 ? `cartItemsContainer  minimized` : `cartItemsContainer`}>\r\n                        {shoppingList}\r\n                    </div>\r\n                    {shoppingList != '' ?   \r\n                        <div className=\"buyButtonShoppingCart\">\r\n                        <div className=\"lineBreak\" />\r\n                        <div className=\"totalSumContainer\">\r\n                        <p>Total: </p>\r\n                        <p>{totalSum}$</p>\r\n                        </div>\r\n                            <BuyButton text={\"Buy\"} handleOnClick={() => goToCheckout()} />\r\n                        </div>\r\n                    : <div className=\"buyButtonShoppingCart\"></div>}\r\n                </div> \r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <p>Empty</p>\r\n                </div>\r\n            )\r\n        }\r\n    } else {\r\n        return (\r\n            <div className=\"shoppingCartContainer flexCenter\">\r\n                    <MdShoppingCart className=\"flexEnd\" size=\"3em\" />\r\n                {shoppingCart.length > 0 ? <div className=\"row flexBetween\"><p className=\"cartItemAmount\">{shoppingCart.length}</p></div> : \"\"}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShoppingCart;","import './listItem.css';\r\nimport './newReleasesList.css';\r\nimport { MdShoppingCart, MdCheckCircle } from 'react-icons/md';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport { actions as movieAction } from '../features/movieDetails';\r\nimport MovieListHeading from './MovieListHeading';\r\n\r\nconst NewReleaseList = (props) => {\r\n\r\n    const [movieList, setMovieList] = useState([]);\r\n    const [genres, setGenres] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    let history = useHistory();\r\n    let url = 'https://api.themoviedb.org/3/genre/movie/list?api_key=7ab73473a05278044ef701c06449633a';\r\n\r\n    const findGenre = async () => {\r\n        try {\r\n            let response = await fetch(url);\r\n            let json = await response.json();\r\n            if (json.genres) {\r\n                setGenres(json.genres);\r\n            }\r\n        } catch {\r\n            console.log('Failed to get data');\r\n        }\r\n\r\n    };\r\n\r\n    const goToMovieDetails = (movie) => {\r\n\t\thistory.push({pathname: '/MovieDetails'});\r\n\t\tdispatch(movieAction.getMovieDetails(movie));\r\n\t}\r\n\r\n    useEffect(() => {\r\n        fetch('https://api.themoviedb.org/3/trending/movie/week?api_key=7ab73473a05278044ef701c06449633a')\r\n            .then((response) => response.json())\r\n            .then((data) => setMovieList(...movieList, data.results));\r\n\r\n        findGenre();\r\n    }, []);\r\n\r\n    const toggleBuyButton = (movie) => {\r\n        let found = props.shoppingCart.find(cartItem => cartItem.title === movie.title);\r\n\t\tif (!found) {\r\n            return (\r\n                <div className=\"price-wrapper\">\r\n                    <p className=\"price\">{movie.title.length}$</p> <MdShoppingCart className=\"shopping-cart-button\" size=\"2em\" onClick={() => props.handleBuyClick(movie, movie.title.length)} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"price-wrapper\">\r\n                    <p className=\"price\">{movie.title.length}$</p> <MdCheckCircle className=\"shopping-cart-button\" size=\"2em\" />\r\n                </div>\r\n            )\r\n        }\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <MovieListHeading heading='New Releases' />\r\n            <div className=\"row\">\r\n                {movieList.slice(0, 8).map((movie, index) => (\r\n                    <div key={index} className=\"list-item\">\r\n                        {movie.poster_path ?\r\n                            <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} className=\"list-item-image\" alt='movie' onClick={() => goToMovieDetails(movie)}></img>\r\n                            :\r\n                            <div className=\"gray-box\" onClick={() => goToMovieDetails(movie)}></div>\r\n                        }\r\n                        <h3 className=\"title\">{movie.title}</h3>\r\n                        <div className=\"genre-container\">\r\n                            {movie.genre_ids.map((genreId, index) => {\r\n                                let genre = genres.find(genre => genre.id === genreId);\r\n                                if (!genre) return null;\r\n                                return (\r\n                                    <div className=\"genre\" key={index}>\r\n                                        {genre.name}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            )}\r\n                        </div>\r\n                        {toggleBuyButton(movie)}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewReleaseList;","import React, { useState, useEffect } from \"react\";\r\nimport '../App.css';\r\nimport './filters.css';\r\nimport './MovieDetails.css';\r\nimport { MdShoppingCart, MdCheckCircle } from \"react-icons/md\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { actions as movieAction } from '../features/movieDetails';\r\nimport axios from 'axios';\r\nimport Pagination from './Pagination';\r\n\r\n\r\nconst Filters = (props) => {\r\n    const apiKey = '7ab73473a05278044ef701c06449633a';\r\n    const url = 'https://api.themoviedb.org/3';\r\n    const genreUrl = `${url}/genre/movie/list`;\r\n    const moviesUrl = `${url}/discover/movie`;\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();   \r\n    const [genres, setGenres] = useState([]);\r\n    const [movieByGenre, setMovieByGenre] = useState([]);\r\n    const [displayGenreList, setDisplayGenreList] = useState(false);\r\n    const [page, setPage] = useState(1);\r\n    const [headLine, setHeadLine] = useState('');\r\n    \r\n    console.log('page: ', page)\r\n\r\n    const fetchGenre = async () => {\r\n        try {\r\n            const { data } = await axios.get(genreUrl, {\r\n                params: {\r\n                    api_key: apiKey,\r\n                    language: 'en_US',\r\n                    page: page\r\n                }\r\n            })\r\n            const modifiedData = data['genres'].map((g) => ({\r\n                id: g['id'],\r\n                name: g['name']\r\n            }))\r\n            return modifiedData;\r\n        } catch (error) { }\r\n    }\r\n\r\n    const fetchMovieByGenre = async (genre_id) => {\r\n        try {\r\n            const { data } = await axios.get(moviesUrl, {\r\n                params: {\r\n                    api_key: apiKey,\r\n                    language: 'en_US',\r\n                    page: page,\r\n                    with_genres: genre_id\r\n                }\r\n            })\r\n            const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n            const modifiedData = data['results'].map((m) => ({\r\n                id: m['id'],\r\n                backPoster: posterUrl + m['backdrop_path'],\r\n                popularity: m['popularith'],\r\n                title: m['title'],\r\n                poster_path: posterUrl + m['poster_path'],\r\n                overview: m['overview'],\r\n                rating: m['vote_average'],\r\n                genre: m['genre_ids'],\r\n            }))\r\n\r\n            return modifiedData;\r\n        } catch (error) { }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setGenres(await fetchGenre());\r\n            setMovieByGenre(await fetchMovieByGenre(28));\r\n        };\r\n        \r\n        fetchAPI();\r\n    }, [page]);\r\n\r\n    const handleGenreClick = async (genre_id) => {\r\n        setMovieByGenre(await fetchMovieByGenre(genre_id));\r\n        props.setGenreActive(true);\r\n    };\r\n   \r\n\r\n\r\n    const genreList = genres.map((movie, index, props) => {\r\n        return (\r\n            <li className=\"list-inline-item\" key={index}>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-info\"\r\n\r\n                    onClick={() => {\r\n                        handleGenreClick(movie.id);\r\n                        setHeadLine(movie.name);\r\n                    }}\r\n                >\r\n                    {movie.name}\r\n                </button>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    const toggleGenreList = () => {\r\n        setDisplayGenreList(!displayGenreList);\r\n    };\r\n\r\n    const toggleBuyButton = (movie) => {\r\n        let found = props.shoppingCart.find(cartItem => cartItem.title === movie.title);\r\n        if (!found) {\r\n            return (\r\n                <div className=\"price-wrapper\">\r\n                    <p className=\"price\">{movie.title.length}$</p> <MdShoppingCart className=\"shopping-cart-button small-display\" size=\"2em\" onClick={() => props.handleBuyClick(movie, movie.title.length)} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"price-wrapper\">\r\n                    <p className=\"price\">{movie.title.length}$</p> <MdCheckCircle className=\"shopping-cart-button small-display\" size=\"2em\" />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const goToMovieDetails = (movie) => {\r\n\t\thistory.push({pathname: '/MovieDetails'});\r\n\t\tdispatch(movieAction.getMovieDetails(movie));\r\n\t}\r\n   \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col\" onClick={() => toggleGenreList()}><div className=\"list-item-header\">\r\n                    {headLine != '' ?\r\n                    <p className=\"list-item-header-title\">{headLine}</p> :  <p className=\"list-item-header-title\">Genre</p>}\r\n                    <p className=\"list-item-header-arrow\">▼</p></div>\r\n                {displayGenreList ?\r\n                 <ul className=\"list-inline\">{genreList}</ul>\r\n                : null\r\n                }\r\n                   \r\n                </div>\r\n            </div>\r\n            \r\n                {props.genreActive ?\r\n                <div>\r\n                    <div className=\"row\">\r\n                        {movieByGenre.map((movie, index) => (\r\n                            <div key={index} className=\"list-item\">\r\n                                {movie.poster_path === 'https://image.tmdb.org/t/p/original/null' ?\r\n                                    <div className=\"gray-box\" onClick={() => goToMovieDetails(movie)}></div>\r\n                                    :\r\n                                    <img src={`${movie.poster_path}`}\r\n                                        className=\"list-item-image\"\r\n                                        alt='movie'\r\n                                        onClick={() => goToMovieDetails(movie)}></img>\r\n                                }\r\n                                <h3 className=\"title\">{movie.title}</h3>\r\n\r\n                                <div className=\"price-wrapper\">\r\n                                    \r\n                                    {toggleBuyButton(movie)}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <Pagination\r\n                        page={page}\r\n                        setPage={setPage}    \r\n                    />\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Filters;\r\n","import './checkout.css'\r\nimport React, { useState } from 'react';\r\nimport MovieInCart from './MovieInCart';\r\nimport MovieListHeading from './MovieListHeading';\r\nimport BuyButton from './BuyButton';\r\nimport { useHistory } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Checkout = () => {\r\n\r\n    let shoppingCart = useSelector(state => state.shoppingCart.product);\r\n    let totalSum = useSelector(state => state.shoppingCart.total);\r\n    let history = useHistory();\r\n\r\n    const [payment, setPayment] = useState(\"\")\r\n    const [name, setName] = useState(\"\")\r\n\r\n    const goToReceipt = (event) => {\r\n        console.log(\"namn:\", name);\r\n        if(payment != \"\") {\r\n            if(shoppingCart.length != 0) {\r\n                history.push('/Receipt')\r\n          }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    const handlePayment = (selected) => {\r\n        setPayment(selected);\r\n    }\r\n\r\n    \r\n    const shoppingList = shoppingCart.map((movie, index) => (\r\n        <div key={index} className=\"movieContainer\">\r\n            <MovieInCart \r\n                title={movie ? movie.title : ''}\r\n                poster={movie ? movie.poster_path : ''}\r\n                price={movie.title.length}\r\n                remove={movie}/>\r\n        </div>\r\n    ));\r\n\r\n\r\n    return (\r\n        <div className=\"checkout-page\">\r\n            <MovieListHeading heading=\"Your Shopping Cart\" />\r\n            <div className=\"shopping-cart\">\r\n                {shoppingList} \r\n                <div className=\"lineBreak\" />\r\n                <div className=\"totalSumContainer\">\r\n                    <p>Total: </p>\r\n                    <p>{totalSum}$</p>\r\n                </div>\r\n            </div>\r\n            <MovieListHeading heading=\"Select Payment Method\" />\r\n            <div className=\"paymethod\">\r\n                <button className=\"payment-button\" onClick={() => handlePayment(\"mastercard\")}>\r\n                    <img\r\n                    className=\"payment-img\"\r\n                    src=\"https://cdn0.iconfinder.com/data/icons/credit-card-debit-card-payment-PNG/128/Mastercard-Curved.png\" \r\n                    alt=\"\" />\r\n                </button>\r\n                <button className=\"payment-button\" onClick={() => handlePayment(\"discover\")}>\r\n                    <img \r\n                    className=\"payment-img\" \r\n                    src=\"https://cdn0.iconfinder.com/data/icons/credit-card-debit-card-payment-PNG/128/Discover-Curved.png\" \r\n                    alt=\"\" />\r\n                </button>\r\n                <button className=\"payment-button\" onClick={() => handlePayment(\"paypal\")}>\r\n                    <img \r\n                    className=\"payment-img\" \r\n                    src=\"https://icons8.com/iconizer/files/Credit_card,_debit_card/orig/paypal-curved.png\" \r\n                    alt=\"\" />\r\n                </button>\r\n                <button className=\"payment-button\" onClick={() => handlePayment(\"amex\")}>\r\n                    <img \r\n                    className=\"payment-img\" \r\n                    src=\"https://cdn0.iconfinder.com/data/icons/credit-card-debit-card-payment-PNG/128/American-Express-Curved.png\" \r\n                    alt=\"\" /> \r\n                </button>\r\n            </div>\r\n            <MovieListHeading heading=\"Your Information\" />\r\n            <form onSubmit={goToReceipt}>\r\n                <div className=\"costumer-info\">\r\n                    <input type=\"text\" placeholder=\"First name\" value={name} onChange={(event) =>{ console.log(\"onchage\", name); setName(event.target.value)}} required></input>\r\n                    <br/>\r\n                    <input type=\"text\" placeholder=\"Last name\" required></input>\r\n                    <br/>\r\n                    <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"E-mail\" required></input>\r\n                    <br/>\r\n                </div>\r\n                \r\n                <BuyButton type=\"submit\" text=\"Buy\" />\r\n            </form>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Checkout;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport './App.css';\r\nimport MovieList from './components/MovieList';\r\nimport MovieListHeading from './components/MovieListHeading';\r\nimport SearchBox from './components/SearchBox';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { actions as cartAction } from './features/shoppingCart';\r\nimport ShoppingCart from './components/ShoppingCart';\r\nimport NewReleaseList from './components/NewReleaseList';\r\nimport Filters from \"./components/Filters\";\r\nimport Checkout from './components/Checkout';\r\n\r\nconst App = () => {\r\n\tconst [movies, setMovies] = useState([]);\r\n\tconst [searchValue, setSearchValue] = useState('');\r\n\tconst [toggleShoppingCart, setToggleShoppingCart] = useState(false);\r\n\tconst [genreActive, setGenreActive] = useState(false);\r\n\tconst [page, setPage] = useState(1);\r\n\tconst [url, setUrl] = useState();\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tlet shoppingCart = useSelector(state => state.shoppingCart.product);\r\n\r\n\tconst addToCart = (movie, price) => {\r\n\t\tlet found = shoppingCart.find(cartItem => cartItem.title === movie.title);\r\n\t\tif (!found) {\r\n\t\t\tdispatch(cartAction.addToCart(movie));\r\n\t\t\tdispatch(cartAction.addToTotalSum(price));\r\n\t\t} else {\r\n\t\t\tconsole.log('Product already added');\r\n\t\t}\t\r\n\t}\r\n\r\n\tconst getMovieRequest = async () => {\r\n\t\ttry {\r\n            const { data } = await axios.get(url, {\r\n                params: {\r\n\t\t\t\t\tquery: searchValue,\r\n                    page: page\r\n                }\r\n            })\r\n            return setMovies(data.results);\r\n        } catch (error) {\r\n\t\t\tconsole.log('Failed to get data: ', error);\r\n\t\t }\t\r\n\t};\r\n\r\n\tuseEffect(() => {\t\t\r\n\t\tsetUrl(`https://api.themoviedb.org/3/search/movie?api_key=7ab73473a05278044ef701c06449633a&query=${searchValue}`)\r\n\t\tgetMovieRequest();\r\n\t}, [searchValue, page]);\r\n\r\n\tconst collapseShoppingCart = () => {\r\n\t\tif (toggleShoppingCart) {\r\n\t\t\tsetToggleShoppingCart(false);\r\n\t\t}\r\n\t}\r\n\r\n\tconst expandShoppingCart = () => {\r\n\t\tif (!toggleShoppingCart) {\r\n\t\t\tsetToggleShoppingCart(true);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<div className=\"shoppingCart\" onClick={() => expandShoppingCart()}>\r\n\t\t\t\t<ShoppingCart toggle={toggleShoppingCart} />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"container\" onClick={() => collapseShoppingCart()}>\t\t\t\t\r\n\t\t\t\t<SearchBox \r\n\t\t\t\t\tsearchValue={searchValue} \r\n\t\t\t\t\tsetSearchValue={setSearchValue} \r\n\t\t\t\t/>\t\t\t\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{searchValue === '' ? \t\r\n\t\t\t\t\t<Filters \r\n\t\t\t\t\t\thandleBuyClick={addToCart} \r\n\t\t\t\t\t\tshoppingCart={shoppingCart} \r\n\t\t\t\t\t\tsetGenreActive={setGenreActive}\r\n\t\t\t\t\t\tgenreActive={genreActive}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\t\r\n\t\t\t\t\t\t<MovieList\r\n\t\t\t\t\t\t\tmovies={movies}\r\n\t\t\t\t\t\t\tpage={page}\r\n\t\t\t\t\t\t\tsetPage={setPage}\r\n\t\t\t\t\t\t\thandleBuyClick={addToCart}\r\n\t\t\t\t\t\t\tshoppingCart={shoppingCart}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\t{!genreActive && searchValue === '' ?\r\n\t\t\t\t\t<NewReleaseList \r\n\t\t\t\t\t\thandleBuyClick={addToCart} \r\n\t\t\t\t\t\tshoppingCart={shoppingCart} \r\n\t\t\t\t\t/>\t\t\t\t\t\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<div />\t\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { createAction, createReducer } from '@reduxjs/toolkit';\r\n\r\nconst getDataFromSearch = createAction('get data from search');\r\nconst getDataFromId = createAction('get data from id');\r\nconst getDataFromTrening = createAction('get data from trending')\r\n\r\nconst actions = { getDataFromSearch, getDataFromId, getDataFromTrening };\r\nconst api_key = '7ab73473a05278044ef701c06449633a'\r\n\r\nconst initialState = {\r\n    url: null\r\n}\r\n\r\nconst reducer = createReducer(initialState, {\r\n    [getDataFromSearch] : (state, action) => {\r\n        return {\r\n            ...state,\r\n            url:  `https://api.themoviedb.org/3/search/movie?api_key=${api_key}&query=${action.payload}`\r\n        }\r\n    },\r\n    \r\n    [getDataFromId] : (state, action) => {\r\n        return {\r\n            ...state,\r\n            url: `https://api.themoviedb.org/3/movie/${action.payload}?api_key=${api_key}`\r\n        }\r\n    },\r\n\r\n    [getDataFromTrening] : (state, action) => {\r\n        return {\r\n            ...state,\r\n            url: `https://api.themoviedb.org/3/trending/movie/week?api_key=${api_key}`\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport { actions, reducer };","import './MovieDetails.css';\r\nimport './BuyButton.css';\r\nimport BuyButton from './BuyButton';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { actions as apiAction } from '../features/apiCall';\r\nimport { actions as cartAction } from '../features/shoppingCart';\r\n\r\nconst MovieDetails = (props) => {\r\n\r\n    const location = useLocation();\r\n\r\n    const [movieID, setMovieID] = useState();\r\n    const [movieName, setMovieName] = useState();\r\n    const [moviePoster, setMoviePoster] = useState();\r\n    const [movieRating, setMovieRating] = useState();\r\n    const [movieGenre, setMovieGenre] = useState([]);\r\n    const [moviePlot, setMoviePlot] = useState();\r\n    const [movieLanguage, setMovieLanguage] = useState([]);\r\n    const [movieCountry, setMovieCountry] = useState([]);\r\n    const [moviePrice, setMoviePrice] = useState();\r\n    const [addedToCart, setAddedToCart] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n     \r\n    let url = useSelector(state => state.apiCall.url);\r\n    let shoppingCart = useSelector(state => state.shoppingCart.product);\r\n    let movie = useSelector(state => state.movieDetails.movie);\r\n\r\n    useEffect(() => {\r\n        setMovieID(movie.id);\r\n     }, []);\r\n\r\n    if (movieID != null) {\r\n        dispatch(apiAction.getDataFromId(movieID));\r\n    }\r\n\r\n    const addToCart = (movie, price) => {\r\n\t\tdispatch(cartAction.addToCart(movie));\r\n\t\tdispatch(cartAction.addToTotalSum(price));\r\n\t}\r\n\r\n     useEffect(() => {\r\n        getSelectedMovie();\r\n    }, [movieID]);\r\n    \r\n\r\n    const getSelectedMovie = async () => {\r\n\r\n        if (movieID) {\r\n            try {\r\n                let response = await fetch(url);\r\n                let data = await response.json();\t\r\n                console.log('data: ', data)\t\r\n                if (movie != null) {\r\n                    setMovieName(data.title);\r\n                    setMoviePoster(data.poster_path);\r\n                    setMovieRating(data.vote_average);\r\n                    setMovieGenre(\r\n                        ...movieGenre,\r\n                        data.genres\r\n                        );\r\n                    setMoviePlot(data.overview);\r\n                    setMovieLanguage(\r\n                        ...movieLanguage,\r\n                        data.spoken_languages\r\n                        );\r\n                    setMovieCountry(\r\n                        ...movieCountry,\r\n                        data.production_countries\r\n                        );\r\n                    setMoviePrice(data.title.length)\r\n                }\t\r\n            } catch {\r\n                console.log('Failed to get data');\r\n            }\r\n        }\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n    const handleCloseWindow = () => {\r\n        history.push('/')\r\n    }\r\n\r\n    const toggleBuyButton = () => {\r\n        let found = shoppingCart.find(cartItem => cartItem.title === movieName);\r\n        if (!found) {\r\n            return (\r\n                <BuyButton text={`Buy ${moviePrice}$`} handleOnClick={ () => handleBuyButton()} />\r\n            )\r\n        } else {\r\n            return (\r\n                <p className=\"buyButtonDisabled\">✓ Added</p>\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleBuyButton = () => {\r\n        addToCart(movie, moviePrice);\r\n    }\r\n\r\n    return (\r\n        <div className=\"movieDetailsContainer\">\r\n            <div className=\"closeWindow\" onClick={() => handleCloseWindow()}>✕</div>\r\n            {movieName \r\n            ? (\r\n            <>\r\n                <section className=\"imgBox\">\r\n                    {moviePoster != null ?\r\n                     <img src={`https://image.tmdb.org/t/p/w500/${moviePoster}`} className=\"moviePoster\" alt=\"\" />\r\n                    : \r\n                    <div className=\"gray-box\" />\r\n                    }\r\n                   \r\n                </section>\r\n                <section className=\"infoBox\">\r\n                    <section className=\"topInfo\">\r\n                        <h3>{movieName}</h3>\r\n                        <section className=\"ratingGenre\">\r\n                            <div className=\"movieRating\">{movieRating}</div> | \r\n                                <div className=\"genreContainer\">\r\n                                    {movieGenre.map((genre, index) => (\r\n                                        <div className=\"movieGenre\" key={index}>\r\n                                            {genre.name}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            \r\n                        </section>\r\n                        <div className=\"moviePlot\">\r\n                            {moviePlot}\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"bottomInfo\">\r\n                        <section className=\"languageCountry\">\r\n                            <div>Language \r\n                            {movieLanguage.map((language, index) => \r\n                                <b key={index}> {language.english_name}</b>\r\n                            )\r\n                            }</div>\r\n                            <div>Country \r\n                            {movieCountry.map((country, index) => \r\n                                <b key={index}> {country.name}</b>\r\n                            )\r\n                            }</div>\r\n                        </section>\r\n                                {toggleBuyButton()}\r\n                    </section>\r\n                </section>\r\n            </>\r\n            )\r\n            : <h3>Loading...</h3>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetails;","import './boughtMovie.css';\r\nimport '../App.css';\r\nimport './listItem.css';\r\n\r\nconst BoughtMovie = (props) => {\r\n\r\n    return (\r\n        <div className=\"list-item\">\r\n            <img src={`https://image.tmdb.org/t/p/w500/${props.poster}`} className=\"bought-item-poster\" alt=\"\" />\r\n            <h3 className=\"bought-item-title\">{props.title}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BoughtMovie;","import { useSelector } from \"react-redux\";\r\nimport BoughtMovie from \"./BoughtMovie\";\r\nimport './receipt.css';\r\nimport '../App.css';\r\n\r\n\r\nconst Receipt = () => {\r\n\r\n    let shoppingCart = useSelector(state => state.shoppingCart.product);\r\n    let totalSum = useSelector (state => state.shoppingCart.total);\r\n\r\n    const shoppingList = shoppingCart.map((movie, index) => (\r\n        <div key={index} className=\"movie-container\">\r\n            <BoughtMovie\r\n            title={movie ? movie.title : ''}\r\n            poster={movie ? movie.poster_path : ''}\r\n            price={movie.title.length}\r\n            />\r\n        </div>\r\n        ));\r\n\r\n    return (\r\n        <div className=\"receipt-container\">\r\n            <h1 className=\"receipt-headline\">Thank you for your purchase!</h1>\r\n            <h3>Movies bought</h3>\r\n            <div className=\"row max-width\">\r\n                {shoppingList}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Receipt;","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport MovieDetails from './components/MovieDetails';\r\nimport Checkout from './components/Checkout';\r\nimport Receipt from './components/Receipt';\r\n\r\nexport default class Routes extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path=\"/\" exact component={App} />\r\n                    <Route path=\"/MovieDetails\" component={MovieDetails} />\r\n                    <Route path=\"/Checkout\" component={Checkout} />\r\n                    <Route path=\"/Receipt\" component={Receipt} />\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { reducer as apiReducer } from './apiCall';\r\nimport { reducer as cartReducer } from './shoppingCart';\r\nimport { reducer as movieReducer } from './movieDetails';\r\n\r\nconst rootReducer = combineReducers({\r\n    apiCall: apiReducer,\r\n    shoppingCart : cartReducer,\r\n    movieDetails : movieReducer\r\n})\r\n\r\nexport { rootReducer };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Routes from './Routes';\r\n\r\nimport {configureStore} from '@reduxjs/toolkit';\r\nimport {Provider} from 'react-redux';\r\nimport { rootReducer } from './features/rootReducer';\r\n\r\nconst store = configureStore({\r\n  reducer : rootReducer\r\n})\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Routes />\r\n    </Provider>\r\n    </React.StrictMode>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// comment from Anastasia\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}